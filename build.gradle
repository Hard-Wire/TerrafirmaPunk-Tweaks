buildscript 
{
    repositories 
	{
        mavenCentral()
		/* 
			Upgrading for Forge 1.7.10
			https://github.com/anatawa12/ForgeGradle-example#how-to-replace-forgegradle-12-with-anatawa12s-fork
		*/
		
        maven 
		{
            name = "forge"
			url = "https://maven.minecraftforge.net/"
        }
        maven 
		{
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies 
	{
		classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.1.+') {
			changing = true
		}
    }
}

// define the properties file
ext.configFile = file "build.prop"

configFile.withReader 
{
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

allprojects 
{
    apply plugin: 'java'
    apply plugin: 'forge'
    
    
    targetCompatibility = 1.8
	sourceCompatibility = 1.8
	
    group = config.group_name
    version = config.mod_version
    archivesBaseName = config.mod_id + "-" + config.minecraft_version

    minecraft 
	{	
        version = config.minecraft_version + "-" + config.forge_version
		
		replaceIn "References.java"
		replace "@MOD_VERSION@", config.mod_version
		
		def tmpDir = '../run/'+config.mod_id
	
        if(!file(tmpDir).exists()) 
		{
            file(tmpDir).mkdirs()
        } 
        runDir = tmpDir
    }
}

repositories 
{
	maven { 
    	// The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { 
    	// the repo from which to get NEI and stuff 
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
	maven { 
		url "https://www.cursemaven.com" 
	}  	 
}
 
dependencies 
{
	//CB NEI
	//compile "codechicken:CodeChickenCore:1.7.10-1.0.4.35:dev"
	//compile "codechicken:CodeChickenLib:1.7.10-1.1.3.127:dev"
	//compile "codechicken:NotEnoughItems:1.7.10-1.0.4.95:dev"
	
	//JEI backport
	compile "curse.maven:codechickencore-unofficial-746279:4378044"
	compile "curse.maven:codechickenlib-unofficial-746280:4388256"
	compile "curse.maven:notenoughitems-gtnh-358228:4856800"
	
	//compile "mcp.mobius.waila:Waila:1.5.11-RC2-NONEI_1.7.10"
	compile "curse.maven:waila-73488:2230518"
	compile fileTree(dir: 'libs', include: '*.jar')
		
	compile "curse.maven:crafting-tweaks-233071:2457094"
}


jar {
    from sourceSets.api.output
    appendix "mc" + minecraft.version

    manifest {
        attributes('FMLAT': config.mod_id+'_at.cfg')
    }
}


//Creates a compiled de-obfuscated jar
task deobfJar(type: Jar){
    from sourceSets.main.output
    appendix = 'deobf'
}

//creates a jar containing only the src
task sourceJar(type: Jar){
    from sourceSets.main.allSource
    appendix = 'src'
}

tasks.build.dependsOn('jar', 'sourceJar', 'deobfJar')

processResources 
{
	inputs.property "mod_version", project.config.mod_version
	inputs.property "tfc_version", project.config.tfc_version
    inputs.property "minecraft_version", project.config.minecraft_version
	
	from(sourceSets.main.resources.srcDirs) 
	{
        include '**/*.info'
        include '**/*.prop'

        // replaces
        expand ([
            'mod_version': project.config.mod_version,
            'tfc_version': project.config.tfc_version,
            'minecraft_version': project.config.minecraft_version,
        ])
    }
    // copy everything else, that we didn't copy before
    from(sourceSets.main.resources.srcDirs) 
	{
        exclude '**/*.info'
        exclude '**/*.prop'
    }
}

